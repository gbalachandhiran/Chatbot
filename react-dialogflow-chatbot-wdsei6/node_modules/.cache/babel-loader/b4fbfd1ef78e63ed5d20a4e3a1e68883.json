{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\react-dialogflow-chatbot-wdsei6\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport useForceUpdate from 'use-force-update';\nimport Loader from \"react-loader-spinner\";\nimport './style.css';\nimport Messages from './Messages';\nimport Timer from './Timer';\n\nconst Chat = props => {\n  _s();\n\n  const [responses, setResponses] = useState([{\n    text: 'Hi This is Scooty!! the bot here to collect some basic information from you. Kindly select how you want our interaction to happen. You can either select Text by clicking \"Text\" button below or say \"Speech\"',\n    isBot: true,\n    id: 1,\n    isDone: true\n  }]);\n  const [speechBool, setSpeechBool] = useState(true);\n  const [disable, setDisable] = useState(false);\n  const [age, setAge] = useState(53);\n  const [gender, setGender] = useState('Male');\n  const [botFlag, setBotFlag] = useState(true);\n  const forceUpdate = useForceUpdate();\n  const [seconds, setSeconds] = useState(10);\n  const [botData, setBotData] = useState([{\n    text: 'I would need to collect some information from you to start with can you please select your age',\n    isBot: true,\n    id: 2,\n    isDone: false\n  }, {\n    text: 'Select Gender',\n    isBot: true,\n    id: 3,\n    isDone: false\n  }, {\n    text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test ',\n    isBot: true,\n    id: 4,\n    isDone: false\n  }]);\n  const [speechData, setSpeechData] = useState([{\n    text: 'I would need to collect some information from you to start with can you please select your age',\n    id: 31,\n    isDone: false,\n    confirm: false,\n    speech: true\n  }, {\n    text: 'Select Gender For example if your male say male  ,if your female say female,or just say other',\n    id: 32,\n    isDone: false,\n    confirm: false,\n    speech: true\n  }, {\n    text: 'Please select one or more tests from the list that you took for the past 3 months. You can say other if none of the items match your tests' + '1.HDL' + '2 LDL' + '3 ECG' + '4 EKG' + '5 CBC',\n    id: 33,\n    isDone: false,\n    confirm: false,\n    speech: true\n  }]);\n  var attempt = 0;\n  var ageCounter = 0;\n  var ageValue = '';\n  var genderCounter = 0;\n  var genderValue = '';\n  const [currentMessage, setCurrentMessage] = useState(''); //voice recordings\n\n  var leftchannel;\n  var rightchannel;\n  var recorder;\n  var recordingLength;\n  var volume;\n  var mediaStream;\n  var sampleRate;\n  var context = null;\n  var blob = null;\n  var cnter = 10; //end of voice recordings\n\n  useEffect(() => {\n    if (speechBool) {\n      setSpeechBool(false);\n      var msg = new SpeechSynthesisUtterance();\n      msg.text = 'Hi This is Scooty!! the bot here to collect some basic information from you. Kindly select how you want our interaction to happen. You can either select Text by clicking \"Text\" button below or say \"Speech\" ';\n      window.speechSynthesis.speak(msg); //To abort the interval you can use this:\n      // setInterval(() => cnter--, 1000);\n      //alert(seconds);\n\n      msg.onend = function (event) {\n        recordVoice();\n      };\n    }\n  }, [attempt, seconds]);\n\n  const handleMessageSubmit = message => {\n    const data = {\n      text: 'good morning'\n    };\n    replyChats(message);\n  };\n\n  function selectAge(value, event) {\n    setAge(value); // for (var i = 0; i < botData.length; i++) {\n    //   alert(botData[i].isDone);\n    // }\n\n    const data = [...responses];\n    data.push({\n      text: 'Select Gender',\n      isBot: true,\n      bot: true\n    });\n    data.push({\n      text: 'Select Gender',\n      isBot: true,\n      id: 3,\n      isDone: true\n    });\n    setResponses(data);\n  }\n\n  function selectGender(value, event) {\n    setGender(value);\n    const data = [...responses];\n    data.push({\n      text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test',\n      isBot: true,\n      bot: true\n    });\n    setResponses(data);\n  }\n\n  const replyChats = message => {\n    axios.post('https://speech2textrasa.herokuapp.com/model/parse', {\n      text: message.text\n    }).then(response => {\n      // alert(response.data);\n      // console.log(response.data);\n      // const responseData = {\n      //   text: response.data['message']['fulfillmentText'],\n      //   isBot: true,\n      // };\n      // setResponses((responses) => [...responses, responseData]);\n      console.log(response.data);\n      const intent = response.data.intent.name;\n\n      if (botData[0].isDone == true && botData[1].isDone == false) {\n        alert('select age');\n\n        if (isNaN(Number(message.text))) {\n          // defaultResponse(message);\n          setBotFlag(false);\n        } else {\n          alert(Number(message.text));\n          setAge(27);\n          serviceResponse(message);\n        }\n      } else if (botData[1].isDone == true && botData[2].isDone == false) {\n        alert('select gender');\n\n        if (message.text == 'male') {\n          alert('male');\n        } else if (message.text.trim() == 'female') {\n          alert('female');\n        }\n\n        setGender('Female');\n        forceUpdate();\n      } else if (intent == 'greet' || intent == 'mood_great' || intent == 'bot_challenge' || intent == 'affirm') {\n        serviceResponse(message);\n      } else {\n        defaultResponse(message);\n      }\n    }).catch(error => {\n      console.log('Error: ', error);\n    });\n  };\n\n  const defaultResponse = message => {\n    const data = [...responses];\n    data.push(message);\n    data.push({\n      text: 'Please Be More Specific',\n      isBot: true,\n      bot: true\n    });\n    setResponses(data);\n  };\n\n  const serviceResponse = message => {\n    axios.post('https://speech2textrasa.herokuapp.com/webhooks/rest/webhook', {\n      message: message.text\n    }).then(response => {\n      var botvalue = null;\n      setDisable(true);\n      console.log(response.data);\n      var botCopy = [...botData];\n\n      for (var i = 0; i < botCopy.length; i++) {\n        if (botCopy[i].isDone == false) {\n          botCopy[i].isDone = botFlag;\n          botvalue = botCopy[i];\n          break;\n        }\n      }\n\n      setBotData(botCopy);\n      console.log('Bot Value ' + botvalue);\n      const data = [...responses];\n      data.push(message);\n      data.push({\n        text: response.data[0].text,\n        isBot: true,\n        bot: true\n      });\n      data.push(botvalue);\n      setResponses(data);\n    });\n  };\n\n  const handleMessageChange = event => {\n    setCurrentMessage(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    const message = {\n      text: currentMessage,\n      isBot: false\n    };\n\n    if (event.key == 'Enter') {\n      setResponses(responses => [...responses, message]);\n      handleMessageSubmit(message);\n      setCurrentMessage('');\n    }\n  };\n\n  const recordVoice = () => {\n    setTimeout(function () {\n      // stop recording\n      recorder.disconnect(context.destination);\n      mediaStream.disconnect(recorder); // we flat the left and right channels down\n      // Float32Array[] => Float32Array\n\n      var leftBuffer = flattenArray(leftchannel, recordingLength);\n      var rightBuffer = flattenArray(rightchannel, recordingLength); // we interleave both channels together\n      // [left[0],right[0],left[1],right[1],...]\n\n      var interleaved = interleave(leftBuffer, rightBuffer); // we create our wav file\n\n      var buffer = new ArrayBuffer(44 + interleaved.length * 2);\n      var view = new DataView(buffer); // RIFF chunk descriptor\n\n      writeUTFBytes(view, 0, 'RIFF');\n      view.setUint32(4, 44 + interleaved.length * 2, true);\n      writeUTFBytes(view, 8, 'WAVE'); // FMT sub-chunk\n\n      writeUTFBytes(view, 12, 'fmt ');\n      view.setUint32(16, 16, true); // chunkSize\n\n      view.setUint16(20, 1, true); // wFormatTag\n\n      view.setUint16(22, 2, true); // wChannels: stereo (2 channels)\n\n      view.setUint32(24, sampleRate, true); // dwSamplesPerSec\n\n      view.setUint32(28, sampleRate * 4, true); // dwAvgBytesPerSec\n\n      view.setUint16(32, 4, true); // wBlockAlign\n\n      view.setUint16(34, 16, true); // wBitsPerSample\n      // data sub-chunk\n\n      writeUTFBytes(view, 36, 'data');\n      view.setUint32(40, interleaved.length * 2, true); // write the PCM samples\n\n      var index = 44;\n      var volume = 1;\n\n      for (var i = 0; i < interleaved.length; i++) {\n        view.setInt16(index, interleaved[i] * (0x7fff * volume), true);\n        index += 2;\n      } // our final blob\n\n\n      blob = new Blob([view], {\n        type: 'audio/wav'\n      });\n      alert('finished recording'); //remove the initiliazing loader\n\n      const copyResponses = [...responses];\n      alert(copyResponses.length);\n      console.log(copyResponses); //remove the initiliazing loader\n\n      var reader = new FileReader();\n      reader.readAsDataURL(blob);\n\n      reader.onloadend = function () {\n        var base64data = reader.result;\n        var base64String = base64data.split(',')[1];\n        axios.post('https://gowthambalachandhiran.pythonanywhere.com/voice', {\n          file_string: base64String\n        }).then(response => {\n          alert(response.data.transcribed_text); // const message = {\n          //   text: response.data.transcribed_text,\n          //   isBot: false,\n          // };\n\n          const message = new Object();\n          message.text = response.data.transcribed_text;\n          message.isBot = false; //replyChats(message);\n          //alert(\"attempt \"+attempt);\n\n          if (attempt < 5) {\n            //first message\n            if (speechData[0].isDone == false) {\n              if (response.data.transcribed_text.trim() == 'speech') {\n                attempt = 0;\n                var speechValue = [...speechData];\n                speechValue[0].isDone = true;\n                setSpeechData(speechValue);\n                const data = [];\n                data.push(message);\n                data.push(speechData[0]);\n                alert(speechData[0]);\n                setResponses(responses => [...responses, ...data]);\n                attempt = 0;\n                var msg = new SpeechSynthesisUtterance();\n                msg.text = speechData[0].text;\n                window.speechSynthesis.speak(msg);\n\n                msg.onend = function (event) {\n                  recordVoice();\n                };\n              } else {\n                attempt++;\n                const data = [];\n                data.push(message); // setResponses(data);\n\n                setResponses(responses => [...responses, ...data]);\n                recordVoice();\n              }\n            } //Second message\n            else if (speechData[0].isDone == true && speechData[1].isDone == false) {\n              if (!isNaN(Number(response.data.transcribed_text.trim()))) {\n                alert(\"its a number\");\n\n                if (ageCounter < 1) {\n                  ageValue = Number(response.data.transcribed_text.trim());\n                  message.text = response.data.transcribed_text.trim();\n                  message.isBot = false;\n                  const data = [];\n                  data.push(new Object(message));\n                  data.push({\n                    text: 'Please confirm your age by saying ' + message.text + ' again or say no to change your age',\n                    speech: true\n                  });\n                  setResponses(responses => [...responses, ...data]);\n                  ageCounter++;\n                  var msg = new SpeechSynthesisUtterance();\n                  msg.text = 'Please confirm your age by saying ' + message.text + ' again or say no to change your age';\n                  window.speechSynthesis.speak(msg);\n\n                  msg.onend = function (event) {\n                    recordVoice();\n                  };\n                } else if (ageCounter >= 1) {\n                  message.text = response.data.transcribed_text.trim();\n                  message.isBot = false;\n                  const data = [];\n                  data.push(new Object(message));\n\n                  if (ageValue == message.text) {\n                    alert(\"age matching\");\n                    attempt = 0;\n                    var speechValue = [...speechData];\n                    speechValue[1].isDone = true;\n                    setSpeechData(speechValue);\n                    data.push(speechData[1]);\n                    setResponses(responses => [...responses, ...data]);\n                    var msg = new SpeechSynthesisUtterance();\n                    msg.text = speechData[1].text;\n                    window.speechSynthesis.speak(msg);\n\n                    msg.onend = function (event) {\n                      recordVoice();\n                    };\n                  } else {\n                    alert(\"age not matching\");\n                    ageCounter = 0;\n                    attempt++;\n                    const data = [];\n                    data.push({\n                      text: 'Please Select your  valid age again ',\n                      speech: true\n                    });\n                    var msg = new SpeechSynthesisUtterance();\n                    msg.text = 'Please Select your  valid age again ';\n                    setResponses(responses => [...responses, ...data]);\n                    window.speechSynthesis.speak(msg);\n\n                    msg.onend = function (event) {\n                      recordVoice();\n                    };\n                  }\n                }\n              } else {\n                ageCounter = 0;\n                attempt++;\n                const data = [];\n                data.push({\n                  text: 'Please Select your your valid age again ',\n                  speech: true\n                });\n                var msg = new SpeechSynthesisUtterance();\n                msg.text = 'Please Select your valid age again ';\n                setResponses(responses => [...responses, ...data]);\n                window.speechSynthesis.speak(msg);\n\n                msg.onend = function (event) {\n                  recordVoice();\n                };\n              }\n            } //Third message\n            else if (speechData[1].isDone == true && speechData[2].isDone == false) {\n              var sex = response.data.transcribed_text.trim();\n\n              if (sex == 'male' || sex == 'female' || sex == 'other') {\n                if (genderCounter < 1) {\n                  genderCounter++;\n                  genderValue = response.data.transcribed_text.trim();\n                  message.text = response.data.transcribed_text.trim();\n                  message.isBot = false;\n                  const data = [];\n                  data.push(new Object(message));\n                  data.push({\n                    text: 'Please confirm your Gender by saying ' + message.text + ' again or say no to change your gender',\n                    speech: true\n                  });\n                  setResponses(responses => [...responses, ...data]);\n                  var msg = new SpeechSynthesisUtterance();\n                  msg.text = 'Please confirm your Gender by saying ' + message.text + ' again or say no to change your gender';\n                  window.speechSynthesis.speak(msg);\n\n                  msg.onend = function (event) {\n                    recordVoice();\n                  };\n                } else if (genderCounter >= 1) {\n                  message.text = response.data.transcribed_text.trim();\n                  message.isBot = false;\n                  const data = [];\n                  data.push(new Object(message));\n\n                  if (genderValue == sex) {\n                    alert(\"gender matching\");\n                    attempt = 0;\n                    var speechValue = [...speechData];\n                    speechValue[2].isDone = true;\n                    setSpeechData(speechValue);\n                    data.push(speechData[2]);\n                    setResponses(responses => [...responses, ...data]);\n                    var msg = new SpeechSynthesisUtterance();\n                    msg.text = speechData[2].text;\n                    window.speechSynthesis.speak(msg);\n\n                    msg.onend = function (event) {\n                      recordVoice();\n                    };\n                  } else {\n                    alert(\"gender not matching\");\n                    genderCounter = 0;\n                    attempt++;\n                    const data = [];\n                    data.push({\n                      text: 'Please Select your  valid gender again ',\n                      speech: true\n                    });\n                    var msg = new SpeechSynthesisUtterance();\n                    msg.text = 'Please Select your  valid gender again ';\n                    setResponses(responses => [...responses, ...data]);\n                    window.speechSynthesis.speak(msg);\n\n                    msg.onend = function (event) {\n                      recordVoice();\n                    };\n                  }\n                }\n              } else {\n                genderCounter = 0;\n                attempt++;\n                const data = [];\n                data.push({\n                  text: 'Please Select your your valid gender again ',\n                  speech: true\n                });\n                var msg = new SpeechSynthesisUtterance();\n                msg.text = 'Please Select your valid gender again ';\n                setResponses(responses => [...responses, ...data]);\n                window.speechSynthesis.speak(msg);\n\n                msg.onend = function (event) {\n                  recordVoice();\n                };\n              }\n            } //fouth message\n\n\n            if (speechData[2].isDone == true) {}\n          } else {\n            const data = [];\n            data.push({\n              text: 'Please contact this no x44545x for better assistance',\n              speech: true\n            });\n            var msg = new SpeechSynthesisUtterance();\n            msg.text = 'Please contact this no x44545x for better assistance';\n            window.speechSynthesis.speak(msg);\n            setResponses(responses => [...responses, ...data]);\n          }\n        }).catch(error => {\n          console.log('Error: ', error);\n        });\n      };\n    }, 5000);\n    alert('recording in progress'); //setInterval(() => cnter--, 1000);\n    //Initliaze the loader\n\n    const data = [];\n    data.push({\n      isLoading: true\n    });\n    setResponses(responses => [...responses, ...data]); //Initliaze the loader\n\n    leftchannel = [];\n    rightchannel = [];\n    recorder = null;\n    recordingLength = 0;\n    volume = null;\n    mediaStream = null;\n    sampleRate = 48000;\n    context = null;\n    blob = null; //\n    // Initialize recorder\n\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n    navigator.getUserMedia({\n      audio: true\n    }, function (e) {\n      console.log('user consent'); // creates the audio context\n\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      context = new AudioContext(); // creates an audio node from the microphone incoming stream\n\n      mediaStream = context.createMediaStreamSource(e); // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor\n      // bufferSize: the onaudioprocess event is called when the buffer is full\n\n      var bufferSize = 2048;\n      var numberOfInputChannels = 2;\n      var numberOfOutputChannels = 2;\n\n      if (context.createScriptProcessor) {\n        recorder = context.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n      } else {\n        recorder = context.createJavaScriptNode(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n      }\n\n      var idx = 0;\n\n      recorder.onaudioprocess = function (e) {\n        idx++;\n        leftchannel.push(new Float32Array(e.inputBuffer.getChannelData(0)));\n        rightchannel.push(new Float32Array(e.inputBuffer.getChannelData(1)));\n        recordingLength += bufferSize;\n      }; // we connect the recorder\n\n\n      mediaStream.connect(recorder);\n      recorder.connect(context.destination);\n    }, function (e) {\n      console.error(e);\n    });\n  };\n\n  function flattenArray(channelBuffer, recordingLength) {\n    var result = new Float32Array(recordingLength);\n    var offset = 0;\n\n    for (var i = 0; i < channelBuffer.length; i++) {\n      var buffer = channelBuffer[i];\n      result.set(buffer, offset);\n      offset += buffer.length;\n    }\n\n    return result;\n  }\n\n  function interleave(leftChannel, rightChannel) {\n    var length = leftChannel.length + rightChannel.length;\n    var result = new Float32Array(length);\n    var inputIndex = 0;\n\n    for (var index = 0; index < length;) {\n      result[index++] = leftChannel[inputIndex];\n      result[index++] = rightChannel[inputIndex];\n      inputIndex++;\n    }\n\n    return result;\n  }\n\n  function writeUTFBytes(view, offset, string) {\n    for (var i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    type: \"Audio\",\n    color: \"#00BFFF\",\n    height: 20,\n    width: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"botContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messagesContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Messages, {\n    messages: responses,\n    selectAge: selectAge,\n    selectGender: selectGender,\n    age: age,\n    sex: gender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    seconds: cnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    value: seconds,\n    class: \"fa fa-microphone microphone-ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 11\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: currentMessage,\n    onChange: handleMessageChange,\n    disabled: true,\n    onKeyDown: handleSubmit,\n    placeholder: \"Say something...\",\n    className: \"messageInputField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onTap: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    style: {\n      marginRight: '10px'\n    },\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512.004 512.004\",\n    height: \"25\",\n    viewBox: \"0 0 512.004 512.004\",\n    width: \"25\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m511.35 52.881-122 400c-3.044 9.919-14.974 13.828-23.29 7.67-7.717-5.727-203.749-151.217-214.37-159.1l-142.1-54.96c-5.79-2.24-9.6-7.81-9.59-14.02.01-6.21 3.85-11.77 9.65-13.98l482-184c5.824-2.232 12.488-.626 16.67 4.17 3.37 3.87 4.55 9.24 3.03 14.22z\",\n    fill: \"#94dfda\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m511.35 52.881-122 400c-3.044 9.919-14.974 13.828-23.29 7.67l-190.05-141.05 332.31-280.84c3.37 3.87 4.55 9.24 3.03 14.22z\",\n    fill: \"#61a7c5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m507.89 58.821-271.49 286.4-63 125.03c-3.16 6.246-10.188 9.453-16.87 7.84-6.76-1.6-11.53-7.64-11.53-14.59v-175.3c0-4.86 2.35-9.41 6.31-12.23l337-239.69c6.29-4.48 14.95-3.45 20.01 2.38 5.07 5.83 4.88 14.56-.43 20.16z\",\n    fill: \"#eef4ff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m507.89 58.821-271.49 286.4-63 125.03c-3.16 6.246-10.188 9.453-16.87 7.84-6.76-1.6-11.53-7.64-11.53-14.59l31.01-144 332.31-280.84c5.07 5.83 4.88 14.56-.43 20.16z\",\n    fill: \"#d9e6fc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 17\n    }\n  })))))));\n};\n\n_s(Chat, \"CfWna1ycgbxmhW5DZFYUJBY3Tnc=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/react-dialogflow-chatbot-wdsei6/src/Chat.js"],"names":["React","useState","useEffect","axios","useForceUpdate","Loader","Messages","Timer","Chat","props","responses","setResponses","text","isBot","id","isDone","speechBool","setSpeechBool","disable","setDisable","age","setAge","gender","setGender","botFlag","setBotFlag","forceUpdate","seconds","setSeconds","botData","setBotData","speechData","setSpeechData","confirm","speech","attempt","ageCounter","ageValue","genderCounter","genderValue","currentMessage","setCurrentMessage","leftchannel","rightchannel","recorder","recordingLength","volume","mediaStream","sampleRate","context","blob","cnter","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","onend","event","recordVoice","handleMessageSubmit","message","data","replyChats","selectAge","value","push","bot","selectGender","post","then","response","console","log","intent","name","alert","isNaN","Number","serviceResponse","trim","defaultResponse","catch","error","botvalue","botCopy","i","length","handleMessageChange","target","handleSubmit","key","setTimeout","disconnect","destination","leftBuffer","flattenArray","rightBuffer","interleaved","interleave","buffer","ArrayBuffer","view","DataView","writeUTFBytes","setUint32","setUint16","index","setInt16","Blob","type","copyResponses","reader","FileReader","readAsDataURL","onloadend","base64data","result","base64String","split","file_string","transcribed_text","Object","speechValue","sex","isLoading","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","audio","e","AudioContext","webkitAudioContext","createMediaStreamSource","bufferSize","numberOfInputChannels","numberOfOutputChannels","createScriptProcessor","createJavaScriptNode","idx","onaudioprocess","Float32Array","inputBuffer","getChannelData","connect","channelBuffer","offset","set","leftChannel","rightChannel","inputIndex","string","setUint8","charCodeAt","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport useForceUpdate from 'use-force-update';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport './style.css';\r\nimport Messages from './Messages';\r\nimport Timer  from './Timer';\r\nconst Chat = (props) => {\r\n  const [responses, setResponses] = useState([\r\n    {\r\n      text: 'Hi This is Scooty!! the bot here to collect some basic information from you. Kindly select how you want our interaction to happen. You can either select Text by clicking \"Text\" button below or say \"Speech\"',\r\n      isBot: true,\r\n      id: 1,\r\n      isDone: true,\r\n    },\r\n  ]);\r\n  const [speechBool, setSpeechBool] = useState(true);\r\n  const [disable, setDisable] = useState(false);\r\n  const [age, setAge] = useState(53);\r\n  const [gender, setGender] = useState('Male');\r\n  const [botFlag, setBotFlag] = useState(true);\r\n  const forceUpdate = useForceUpdate();\r\n  const [seconds, setSeconds] = useState(10);\r\n  const [botData, setBotData] = useState([\r\n    {\r\n      text: 'I would need to collect some information from you to start with can you please select your age',\r\n      isBot: true,\r\n      id: 2,\r\n      isDone: false,\r\n    },\r\n    {\r\n      text: 'Select Gender',\r\n      isBot: true,\r\n      id: 3,\r\n      isDone: false,\r\n    },\r\n    {\r\n      text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test ',\r\n      isBot: true,\r\n      id: 4,\r\n      isDone: false,\r\n    },\r\n  ]);\r\n\r\n  const [speechData, setSpeechData] = useState([\r\n    {\r\n      text: 'I would need to collect some information from you to start with can you please select your age',\r\n\r\n      id: 31,\r\n      isDone: false,\r\n      confirm: false,\r\n      speech: true,\r\n    },\r\n    {\r\n      text: 'Select Gender For example if your male say male  ,if your female say female,or just say other',\r\n\r\n      id: 32,\r\n      isDone: false,\r\n      confirm: false,\r\n      speech: true,\r\n    },\r\n    {\r\n      text: 'Please select one or more tests from the list that you took for the past 3 months. You can say other if none of the items match your tests'+\r\n      '1.HDL'+\r\n      '2 LDL'+\r\n      '3 ECG'+\r\n      '4 EKG'+\r\n      '5 CBC',\r\n\r\n      id: 33,\r\n      isDone: false,\r\n      confirm: false,\r\n      speech: true,\r\n    },\r\n  ]);\r\n  var attempt = 0;\r\n  var ageCounter = 0;\r\n  var ageValue = '';\r\n\r\n  var genderCounter = 0;\r\n  var genderValue = '';\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n\r\n  //voice recordings\r\n  var leftchannel;\r\n  var rightchannel;\r\n  var recorder;\r\n  var recordingLength;\r\n  var volume;\r\n  var mediaStream;\r\n  var sampleRate;\r\n  var context = null;\r\n  var blob = null;\r\n  var cnter = 10;\r\n  //end of voice recordings\r\n  useEffect(() => {\r\n    if (speechBool) {\r\n      setSpeechBool(false);\r\n      var msg = new SpeechSynthesisUtterance();\r\n      msg.text =\r\n        'Hi This is Scooty!! the bot here to collect some basic information from you. Kindly select how you want our interaction to happen. You can either select Text by clicking \"Text\" button below or say \"Speech\" ';\r\n      window.speechSynthesis.speak(msg);\r\n\r\n      //To abort the interval you can use this:\r\n     \r\n      // setInterval(() => cnter--, 1000);\r\n\r\n      //alert(seconds);\r\n      msg.onend = function (event) {\r\n        recordVoice();\r\n      };\r\n    }\r\n    \r\n  },[attempt,seconds]);\r\n\r\n  const handleMessageSubmit = (message) => {\r\n    const data = {\r\n      text: 'good morning',\r\n    };\r\n    replyChats(message);\r\n  };\r\n  function selectAge(value, event) {\r\n    setAge(value);\r\n    // for (var i = 0; i < botData.length; i++) {\r\n    //   alert(botData[i].isDone);\r\n    // }\r\n    const data = [...responses];\r\n    data.push({\r\n      text: 'Select Gender',\r\n      isBot: true,\r\n      bot: true,\r\n    });\r\n    data.push({\r\n      text: 'Select Gender',\r\n      isBot: true,\r\n      id: 3,\r\n      isDone: true,\r\n    });\r\n    setResponses(data);\r\n  }\r\n\r\n  function selectGender(value, event) {\r\n    setGender(value);\r\n    const data = [...responses];\r\n\r\n    data.push({\r\n      text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test',\r\n      isBot: true,\r\n      bot: true,\r\n    });\r\n    setResponses(data);\r\n  }\r\n  const replyChats = (message) => {\r\n    axios\r\n      .post('https://speech2textrasa.herokuapp.com/model/parse', {\r\n        text: message.text,\r\n      })\r\n      .then((response) => {\r\n        // alert(response.data);\r\n        // console.log(response.data);\r\n        // const responseData = {\r\n        //   text: response.data['message']['fulfillmentText'],\r\n        //   isBot: true,\r\n        // };\r\n        // setResponses((responses) => [...responses, responseData]);\r\n        console.log(response.data);\r\n        const intent = response.data.intent.name;\r\n\r\n        if (botData[0].isDone == true && botData[1].isDone == false) {\r\n          alert('select age');\r\n          if (isNaN(Number(message.text))) {\r\n            // defaultResponse(message);\r\n            setBotFlag(false);\r\n          } else {\r\n            alert(Number(message.text));\r\n            setAge(27);\r\n            serviceResponse(message);\r\n          }\r\n        } else if (botData[1].isDone == true && botData[2].isDone == false) {\r\n          alert('select gender');\r\n          if (message.text == 'male') {\r\n            alert('male');\r\n          } else if (message.text.trim() == 'female') {\r\n            alert('female');\r\n          }\r\n          setGender('Female');\r\n          forceUpdate();\r\n        } else if (\r\n          intent == 'greet' ||\r\n          intent == 'mood_great' ||\r\n          intent == 'bot_challenge' ||\r\n          intent == 'affirm'\r\n        ) {\r\n          serviceResponse(message);\r\n        } else {\r\n          defaultResponse(message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error: ', error);\r\n      });\r\n  };\r\n  const defaultResponse = (message) => {\r\n    const data = [...responses];\r\n    data.push(message);\r\n    data.push({\r\n      text: 'Please Be More Specific',\r\n      isBot: true,\r\n      bot: true,\r\n    });\r\n    setResponses(data);\r\n  };\r\n\r\n  const serviceResponse = (message) => {\r\n    axios\r\n      .post('https://speech2textrasa.herokuapp.com/webhooks/rest/webhook', {\r\n        message: message.text,\r\n      })\r\n      .then((response) => {\r\n        var botvalue = null;\r\n        setDisable(true);\r\n        console.log(response.data);\r\n        var botCopy = [...botData];\r\n        for (var i = 0; i < botCopy.length; i++) {\r\n          if (botCopy[i].isDone == false) {\r\n            botCopy[i].isDone = botFlag;\r\n            botvalue = botCopy[i];\r\n            break;\r\n          }\r\n        }\r\n        setBotData(botCopy);\r\n        console.log('Bot Value ' + botvalue);\r\n        const data = [...responses];\r\n        data.push(message);\r\n        data.push({\r\n          text: response.data[0].text,\r\n          isBot: true,\r\n          bot: true,\r\n        });\r\n        data.push(botvalue);\r\n        setResponses(data);\r\n      });\r\n  };\r\n  const handleMessageChange = (event) => {\r\n    setCurrentMessage(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    const message = {\r\n      text: currentMessage,\r\n      isBot: false,\r\n    };\r\n    if (event.key == 'Enter') {\r\n      setResponses((responses) => [...responses, message]);\r\n      handleMessageSubmit(message);\r\n      setCurrentMessage('');\r\n    }\r\n  };\r\n\r\n  const recordVoice = () => {\r\n    setTimeout(function () {\r\n      // stop recording\r\n\r\n      recorder.disconnect(context.destination);\r\n      mediaStream.disconnect(recorder);\r\n\r\n      // we flat the left and right channels down\r\n      // Float32Array[] => Float32Array\r\n      var leftBuffer = flattenArray(leftchannel, recordingLength);\r\n      var rightBuffer = flattenArray(rightchannel, recordingLength);\r\n      // we interleave both channels together\r\n      // [left[0],right[0],left[1],right[1],...]\r\n      var interleaved = interleave(leftBuffer, rightBuffer);\r\n\r\n      // we create our wav file\r\n      var buffer = new ArrayBuffer(44 + interleaved.length * 2);\r\n      var view = new DataView(buffer);\r\n\r\n      // RIFF chunk descriptor\r\n      writeUTFBytes(view, 0, 'RIFF');\r\n      view.setUint32(4, 44 + interleaved.length * 2, true);\r\n      writeUTFBytes(view, 8, 'WAVE');\r\n      // FMT sub-chunk\r\n      writeUTFBytes(view, 12, 'fmt ');\r\n      view.setUint32(16, 16, true); // chunkSize\r\n      view.setUint16(20, 1, true); // wFormatTag\r\n      view.setUint16(22, 2, true); // wChannels: stereo (2 channels)\r\n      view.setUint32(24, sampleRate, true); // dwSamplesPerSec\r\n      view.setUint32(28, sampleRate * 4, true); // dwAvgBytesPerSec\r\n      view.setUint16(32, 4, true); // wBlockAlign\r\n      view.setUint16(34, 16, true); // wBitsPerSample\r\n      // data sub-chunk\r\n      writeUTFBytes(view, 36, 'data');\r\n      view.setUint32(40, interleaved.length * 2, true);\r\n\r\n      // write the PCM samples\r\n      var index = 44;\r\n      var volume = 1;\r\n      for (var i = 0; i < interleaved.length; i++) {\r\n        view.setInt16(index, interleaved[i] * (0x7fff * volume), true);\r\n        index += 2;\r\n      }\r\n\r\n      // our final blob\r\n      blob = new Blob([view], { type: 'audio/wav' });\r\n\r\n      alert('finished recording');\r\n\r\n      //remove the initiliazing loader\r\n      const copyResponses = [...responses]\r\n      alert(copyResponses.length);\r\n      console.log(copyResponses);\r\n\r\n      //remove the initiliazing loader\r\n\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(blob);\r\n      reader.onloadend = function () {\r\n        var base64data = reader.result;\r\n        var base64String = base64data.split(',')[1];\r\n\r\n        axios\r\n          .post('https://gowthambalachandhiran.pythonanywhere.com/voice', {\r\n            file_string: base64String,\r\n          })\r\n          .then((response) => {\r\n            alert(response.data.transcribed_text);\r\n            // const message = {\r\n            //   text: response.data.transcribed_text,\r\n            //   isBot: false,\r\n            // };\r\n            const message =  new Object();\r\n            message.text = response.data.transcribed_text;\r\n            message.isBot = false;\r\n            //replyChats(message);\r\n            //alert(\"attempt \"+attempt);\r\n            if (attempt < 5) {\r\n              //first message\r\n              if (speechData[0].isDone == false) {\r\n                if (response.data.transcribed_text.trim() == 'speech') {\r\n                  attempt=0;\r\n                  var speechValue = [...speechData];\r\n                  speechValue[0].isDone = true;\r\n                  setSpeechData(speechValue);\r\n                  const data = [];\r\n                  data.push(message);\r\n                  data.push(speechData[0]);\r\n                  alert(speechData[0]);\r\n                  setResponses(responses => ([...responses, ...data]));\r\n                  attempt = 0;\r\n                  var msg = new SpeechSynthesisUtterance();\r\n                  msg.text = speechData[0].text;\r\n\r\n                  window.speechSynthesis.speak(msg);\r\n                  msg.onend = function (event) {\r\n                    recordVoice();\r\n                  };\r\n                } else {\r\n                  attempt++;\r\n                 \r\n                  const data = [];\r\n                  data.push(message);\r\n                 \r\n                 // setResponses(data);\r\n                 setResponses(responses => ([...responses, ...data]));\r\n\r\n\r\n                  recordVoice();\r\n                }\r\n              }\r\n              //Second message\r\n              else if (speechData[0].isDone == true && speechData[1].isDone == false){\r\n\r\n                if(!isNaN(Number(response.data.transcribed_text.trim()))){\r\n                  alert(\"its a number\");\r\n\r\n                  if(ageCounter<1){\r\n                    ageValue = Number(response.data.transcribed_text.trim());\r\n                  \r\n                  message.text = response.data.transcribed_text.trim();\r\n                  message.isBot = false;\r\n                  const data = [];\r\n                  data.push(new Object(message));\r\n                  data.push(\r\n                    {\r\n                      text: 'Please confirm your age by saying '+message.text+' again or say no to change your age',\r\n                      speech: true,\r\n                  \r\n                    }\r\n\r\n                  )\r\n                  \r\n                  setResponses(responses => ([...responses, ...data]));\r\n                  ageCounter++;\r\n                  var msg = new SpeechSynthesisUtterance();\r\n                  msg.text = 'Please confirm your age by saying '+message.text+' again or say no to change your age';\r\n\r\n                  window.speechSynthesis.speak(msg);\r\n                  msg.onend = function (event) {\r\n                    recordVoice();\r\n                  };\r\n                }\r\n                else if(ageCounter>=1){\r\n\r\n                  message.text = response.data.transcribed_text.trim();\r\n                  message.isBot = false;\r\n                  const data = [];\r\n                  data.push(new Object(message));\r\n                  if(ageValue==message.text){\r\n                      alert(\"age matching\");\r\n                      attempt = 0;\r\n                      var speechValue = [...speechData];\r\n                      speechValue[1].isDone = true;\r\n                      setSpeechData(speechValue);\r\n                      data.push(speechData[1]);\r\n                      setResponses(responses => ([...responses, ...data]));\r\n                      var msg = new SpeechSynthesisUtterance();\r\n                      msg.text = speechData[1].text;\r\n\r\n                    window.speechSynthesis.speak(msg);\r\n                     msg.onend = function (event) {\r\n                    recordVoice();\r\n                  };\r\n                  }\r\n                  else{\r\n                    alert(\"age not matching\");\r\n                    ageCounter = 0;\r\n                    attempt++;\r\n                    const data = [];\r\n                      data.push({\r\n                    text: 'Please Select your  valid age again ',\r\n\r\n                    speech: true,\r\n                   });\r\n              var msg = new SpeechSynthesisUtterance();\r\n              msg.text = 'Please Select your  valid age again ';\r\n              setResponses(responses => ([...responses, ...data]));\r\n              window.speechSynthesis.speak(msg);\r\n              msg.onend = function (event) {\r\n                recordVoice();\r\n              };\r\n                  }\r\n\r\n                }\r\n                }\r\n                else{\r\n                  ageCounter = 0;\r\n                  attempt++;\r\n                  const data = [];\r\n                  data.push({\r\n                text: 'Please Select your your valid age again ',\r\n\r\n                speech: true,\r\n               });\r\n          var msg = new SpeechSynthesisUtterance();\r\n          msg.text = 'Please Select your valid age again ';\r\n          setResponses(responses => ([...responses, ...data]));\r\n          window.speechSynthesis.speak(msg);\r\n          msg.onend = function (event) {\r\n            recordVoice();\r\n          };\r\n                }\r\n\r\n              }\r\n              //Third message\r\n              else if (speechData[1].isDone == true && speechData[2].isDone == false){\r\n\r\n                var sex = response.data.transcribed_text.trim();\r\n                if(sex=='male' || sex=='female' || sex=='other'){\r\n                 if(genderCounter<1){\r\n                  genderCounter++;\r\n                  genderValue = response.data.transcribed_text.trim();\r\n                  \r\n                  message.text = response.data.transcribed_text.trim();\r\n                  message.isBot = false;\r\n                  const data = [];\r\n                  data.push(new Object(message));\r\n                  data.push(\r\n                    {\r\n                      text: 'Please confirm your Gender by saying '+message.text+' again or say no to change your gender',\r\n                      speech: true,\r\n                  \r\n                    }\r\n\r\n                  )\r\n                  \r\n                  setResponses(responses => ([...responses, ...data]));\r\n                  \r\n                  var msg = new SpeechSynthesisUtterance();\r\n                  msg.text = 'Please confirm your Gender by saying '+message.text+' again or say no to change your gender';\r\n\r\n                  window.speechSynthesis.speak(msg);\r\n                  msg.onend = function (event) {\r\n                    recordVoice();\r\n                  };\r\n\r\n                 }\r\n                 else if(genderCounter>=1){\r\n\r\n                  message.text = response.data.transcribed_text.trim();\r\n                  message.isBot = false;\r\n                  const data = [];\r\n                  data.push(new Object(message));\r\n                  if(genderValue==sex){\r\n                      alert(\"gender matching\");\r\n                      attempt = 0;\r\n                      var speechValue = [...speechData];\r\n                      speechValue[2].isDone = true;\r\n                      setSpeechData(speechValue);\r\n                      data.push(speechData[2]);\r\n                      setResponses(responses => ([...responses, ...data]));\r\n                      var msg = new SpeechSynthesisUtterance();\r\n                      msg.text = speechData[2].text;\r\n\r\n                    window.speechSynthesis.speak(msg);\r\n                     msg.onend = function (event) {\r\n                    recordVoice();\r\n                  };\r\n                  }\r\n                  else{\r\n                    alert(\"gender not matching\");\r\n                    genderCounter = 0;\r\n                    attempt++;\r\n                    const data = [];\r\n                      data.push({\r\n                    text: 'Please Select your  valid gender again ',\r\n\r\n                    speech: true,\r\n                   });\r\n              var msg = new SpeechSynthesisUtterance();\r\n              msg.text = 'Please Select your  valid gender again ';\r\n              setResponses(responses => ([...responses, ...data]));\r\n              window.speechSynthesis.speak(msg);\r\n              msg.onend = function (event) {\r\n                recordVoice();\r\n              };\r\n                  }\r\n\r\n\r\n                 }\r\n                }\r\n                else{\r\n\r\n                  genderCounter = 0;\r\n                  attempt++;\r\n                  const data = [];\r\n                  data.push({\r\n                text: 'Please Select your your valid gender again ',\r\n\r\n                speech: true,\r\n               });\r\n          var msg = new SpeechSynthesisUtterance();\r\n          msg.text = 'Please Select your valid gender again ';\r\n          setResponses(responses => ([...responses, ...data]));\r\n          window.speechSynthesis.speak(msg);\r\n          msg.onend = function (event) {\r\n            recordVoice();\r\n          };\r\n\r\n                }\r\n\r\n              }\r\n\r\n              //fouth message\r\n              if(speechData[2].isDone == true){\r\n                \r\n\r\n              }\r\n\r\n            } else {\r\n              const data = [];\r\n              data.push({\r\n                text: 'Please contact this no x44545x for better assistance',\r\n\r\n                speech: true,\r\n              });\r\n              var msg = new SpeechSynthesisUtterance();\r\n              msg.text = 'Please contact this no x44545x for better assistance';\r\n\r\n              window.speechSynthesis.speak(msg);\r\n              setResponses(responses => ([...responses, ...data]));\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log('Error: ', error);\r\n          });\r\n      };\r\n    }, 5000);\r\n    alert('recording in progress');\r\n    //setInterval(() => cnter--, 1000);\r\n\r\n    //Initliaze the loader\r\n\r\n    const data = [];\r\n    data.push({\r\n     \r\n\r\n      isLoading: true,\r\n    });\r\n   \r\n    setResponses(responses => ([...responses, ...data]));\r\n\r\n    //Initliaze the loader\r\n\r\n    leftchannel = [];\r\n    rightchannel = [];\r\n    recorder = null;\r\n    recordingLength = 0;\r\n    volume = null;\r\n    mediaStream = null;\r\n    sampleRate = 48000;\r\n    context = null;\r\n    blob = null;\r\n\r\n    //\r\n\r\n    // Initialize recorder\r\n    navigator.getUserMedia =\r\n      navigator.getUserMedia ||\r\n      navigator.webkitGetUserMedia ||\r\n      navigator.mozGetUserMedia ||\r\n      navigator.msGetUserMedia;\r\n    navigator.getUserMedia(\r\n      {\r\n        audio: true,\r\n      },\r\n      function (e) {\r\n        console.log('user consent');\r\n\r\n        // creates the audio context\r\n        window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n        context = new AudioContext();\r\n\r\n        // creates an audio node from the microphone incoming stream\r\n        mediaStream = context.createMediaStreamSource(e);\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor\r\n        // bufferSize: the onaudioprocess event is called when the buffer is full\r\n        var bufferSize = 2048;\r\n        var numberOfInputChannels = 2;\r\n        var numberOfOutputChannels = 2;\r\n        if (context.createScriptProcessor) {\r\n          recorder = context.createScriptProcessor(\r\n            bufferSize,\r\n            numberOfInputChannels,\r\n            numberOfOutputChannels\r\n          );\r\n        } else {\r\n          recorder = context.createJavaScriptNode(\r\n            bufferSize,\r\n            numberOfInputChannels,\r\n            numberOfOutputChannels\r\n          );\r\n        }\r\n        var idx = 0;\r\n        recorder.onaudioprocess = function (e) {\r\n          idx++;\r\n\r\n          leftchannel.push(new Float32Array(e.inputBuffer.getChannelData(0)));\r\n          rightchannel.push(new Float32Array(e.inputBuffer.getChannelData(1)));\r\n          recordingLength += bufferSize;\r\n        };\r\n\r\n        // we connect the recorder\r\n\r\n        mediaStream.connect(recorder);\r\n        recorder.connect(context.destination);\r\n      },\r\n      function (e) {\r\n        console.error(e);\r\n      }\r\n    );\r\n  };\r\n\r\n  function flattenArray(channelBuffer, recordingLength) {\r\n    var result = new Float32Array(recordingLength);\r\n    var offset = 0;\r\n    for (var i = 0; i < channelBuffer.length; i++) {\r\n      var buffer = channelBuffer[i];\r\n      result.set(buffer, offset);\r\n      offset += buffer.length;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function interleave(leftChannel, rightChannel) {\r\n    var length = leftChannel.length + rightChannel.length;\r\n    var result = new Float32Array(length);\r\n\r\n    var inputIndex = 0;\r\n\r\n    for (var index = 0; index < length; ) {\r\n      result[index++] = leftChannel[inputIndex];\r\n      result[index++] = rightChannel[inputIndex];\r\n      inputIndex++;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function writeUTFBytes(view, offset, string) {\r\n    for (var i = 0; i < string.length; i++) {\r\n      view.setUint8(offset + i, string.charCodeAt(i));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"chatSection\">\r\n      <Loader\r\n       type=\"Audio\"\r\n        color=\"#00BFFF\"\r\n        height={20}\r\n        width={50}\r\n      />\r\n      <div className=\"botContainer\">\r\n        <div className=\"messagesContainer\">\r\n          <div className=\"messageCard\">\r\n            <Messages\r\n              messages={responses}\r\n              selectAge={selectAge}\r\n              selectGender={selectGender}\r\n              age={age}\r\n              sex={gender}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/*The input section is 👇*/}\r\n        <div className=\"inputSection\">\r\n\r\n        <Timer seconds={cnter} />\r\n          <button  value={seconds} class=\"fa fa-microphone microphone-ico\"> </button>\r\n      \r\n          <input\r\n            type=\"text\"\r\n            value={currentMessage}\r\n            onChange={handleMessageChange}\r\n            disabled={true}\r\n            onKeyDown={handleSubmit}\r\n            placeholder=\"Say something...\"\r\n            className=\"messageInputField\"\r\n          />\r\n\r\n          <div onTap={handleSubmit}>\r\n            <svg\r\n              style={{ marginRight: '10px' }}\r\n              id=\"Capa_1\"\r\n              enableBackground=\"new 0 0 512.004 512.004\"\r\n              height=\"25\"\r\n              viewBox=\"0 0 512.004 512.004\"\r\n              width=\"25\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <g>\r\n                <path\r\n                  d=\"m511.35 52.881-122 400c-3.044 9.919-14.974 13.828-23.29 7.67-7.717-5.727-203.749-151.217-214.37-159.1l-142.1-54.96c-5.79-2.24-9.6-7.81-9.59-14.02.01-6.21 3.85-11.77 9.65-13.98l482-184c5.824-2.232 12.488-.626 16.67 4.17 3.37 3.87 4.55 9.24 3.03 14.22z\"\r\n                  fill=\"#94dfda\"\r\n                />\r\n                <path\r\n                  d=\"m511.35 52.881-122 400c-3.044 9.919-14.974 13.828-23.29 7.67l-190.05-141.05 332.31-280.84c3.37 3.87 4.55 9.24 3.03 14.22z\"\r\n                  fill=\"#61a7c5\"\r\n                />\r\n                <path\r\n                  d=\"m507.89 58.821-271.49 286.4-63 125.03c-3.16 6.246-10.188 9.453-16.87 7.84-6.76-1.6-11.53-7.64-11.53-14.59v-175.3c0-4.86 2.35-9.41 6.31-12.23l337-239.69c6.29-4.48 14.95-3.45 20.01 2.38 5.07 5.83 4.88 14.56-.43 20.16z\"\r\n                  fill=\"#eef4ff\"\r\n                />\r\n                <path\r\n                  d=\"m507.89 58.821-271.49 286.4-63 125.03c-3.16 6.246-10.188 9.453-16.87 7.84-6.76-1.6-11.53-7.64-11.53-14.59l31.01-144 332.31-280.84c5.07 5.83 4.88 14.56-.43 20.16z\"\r\n                  fill=\"#d9e6fc\"\r\n                />\r\n              </g>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}