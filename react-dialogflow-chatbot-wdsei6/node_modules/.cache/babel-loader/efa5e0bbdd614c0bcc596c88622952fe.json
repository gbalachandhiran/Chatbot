{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\react-dialogflow-chatbot-wdsei6\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport useForceUpdate from 'use-force-update';\nimport './style.css';\nimport Messages from './Messages';\n\nconst Chat = props => {\n  _s();\n\n  const [responses, setResponses] = useState([{\n    text: 'Hi This is Scooty!! the bot here to collect some basic information from you. Kindly select how you want our interaction to happen. You can either select Text by clicking \"Text\" button below or say \"Speech\" after holding Mic button',\n    isBot: true,\n    id: 1,\n    isDone: true\n  }]);\n  const [speechBool, setSpeechBool] = useState(true);\n  const [disable, setDisable] = useState(false);\n  const [age, setAge] = useState(53);\n  const [gender, setGender] = useState('Male');\n  const [botFlag, setBotFlag] = useState(true);\n  const forceUpdate = useForceUpdate();\n  const [seconds, setSeconds] = useState(10);\n  const [botData, setBotData] = useState([{\n    text: 'I would need to collect some information from you to start with can you please select your age',\n    isBot: true,\n    id: 2,\n    isDone: false\n  }, {\n    text: 'Select Gender',\n    isBot: true,\n    id: 3,\n    isDone: false\n  }, {\n    text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test ',\n    isBot: true,\n    id: 4,\n    isDone: false\n  }]);\n  const [speechData, setSpeechData] = useState([{\n    text: 'I would need to collect some information from you to start with can you please select your age',\n    id: 31,\n    isDone: false,\n    confirm: false,\n    speech: true\n  }, {\n    text: 'Select Gender',\n    id: 32,\n    isDone: false,\n    confirm: false,\n    speech: true\n  }, {\n    text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test ',\n    id: 33,\n    isDone: false,\n    confirm: false,\n    speech: true\n  }]);\n  const [attempt, setAttempt] = useState(1);\n  const [currentMessage, setCurrentMessage] = useState(''); //voice recordings\n\n  var leftchannel;\n  var rightchannel;\n  var recorder;\n  var recordingLength;\n  var volume;\n  var mediaStream;\n  var sampleRate;\n  var context = null;\n  var blob = null; //end of voice recordings\n\n  useEffect(() => {\n    if (speechBool) {\n      setSpeechBool(false);\n      var msg = new SpeechSynthesisUtterance();\n      msg.text = 'Hi This is Scooty!! the bot here to collect some basic information from you. Kindly select how you want our interaction to happen. You can either select Text by clicking \"Text\" button below or say \"Speech\" after holding Mic button';\n      window.speechSynthesis.speak(msg); //To abort the interval you can use this:\n      // setInterval(() => setSeconds(seconds - 1), 1000);\n      //alert(seconds);\n\n      msg.onend = function (event) {\n        recordVoice();\n      };\n    }\n  });\n\n  const handleMessageSubmit = message => {\n    const data = {\n      text: 'good morning'\n    };\n    replyChats(message);\n  };\n\n  function selectAge(value, event) {\n    setAge(value); // for (var i = 0; i < botData.length; i++) {\n    //   alert(botData[i].isDone);\n    // }\n\n    const data = [...responses];\n    data.push({\n      text: 'Select Gender',\n      isBot: true,\n      bot: true\n    });\n    data.push({\n      text: 'Select Gender',\n      isBot: true,\n      id: 3,\n      isDone: true\n    });\n    setResponses(data);\n  }\n\n  function selectGender(value, event) {\n    setGender(value);\n    const data = [...responses];\n    data.push({\n      text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test',\n      isBot: true,\n      bot: true\n    });\n    setResponses(data);\n  }\n\n  const replyChats = message => {\n    axios.post('https://speech2textrasa.herokuapp.com/model/parse', {\n      text: message.text\n    }).then(response => {\n      // alert(response.data);\n      // console.log(response.data);\n      // const responseData = {\n      //   text: response.data['message']['fulfillmentText'],\n      //   isBot: true,\n      // };\n      // setResponses((responses) => [...responses, responseData]);\n      console.log(response.data);\n      const intent = response.data.intent.name;\n\n      if (botData[0].isDone == true && botData[1].isDone == false) {\n        alert('select age');\n\n        if (isNaN(Number(message.text))) {\n          // defaultResponse(message);\n          setBotFlag(false);\n        } else {\n          alert(Number(message.text));\n          setAge(27);\n          serviceResponse(message);\n        }\n      } else if (botData[1].isDone == true && botData[2].isDone == false) {\n        alert('select gender');\n\n        if (message.text == 'male') {\n          alert('male');\n        } else if (message.text.trim() == 'female') {\n          alert('female');\n        }\n\n        setGender('Female');\n        forceUpdate();\n      } else if (intent == 'greet' || intent == 'mood_great' || intent == 'bot_challenge' || intent == 'affirm') {\n        serviceResponse(message);\n      } else {\n        defaultResponse(message);\n      }\n    }).catch(error => {\n      console.log('Error: ', error);\n    });\n  };\n\n  const defaultResponse = message => {\n    const data = [...responses];\n    data.push(message);\n    data.push({\n      text: 'Please Be More Specific',\n      isBot: true,\n      bot: true\n    });\n    setResponses(data);\n  };\n\n  const serviceResponse = message => {\n    axios.post('https://speech2textrasa.herokuapp.com/webhooks/rest/webhook', {\n      message: message.text\n    }).then(response => {\n      var botvalue = null;\n      setDisable(true);\n      console.log(response.data);\n      var botCopy = [...botData];\n\n      for (var i = 0; i < botCopy.length; i++) {\n        if (botCopy[i].isDone == false) {\n          botCopy[i].isDone = botFlag;\n          botvalue = botCopy[i];\n          break;\n        }\n      }\n\n      setBotData(botCopy);\n      console.log('Bot Value ' + botvalue);\n      const data = [...responses];\n      data.push(message);\n      data.push({\n        text: response.data[0].text,\n        isBot: true,\n        bot: true\n      });\n      data.push(botvalue);\n      setResponses(data);\n    });\n  };\n\n  const handleMessageChange = event => {\n    setCurrentMessage(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    const message = {\n      text: currentMessage,\n      isBot: false\n    };\n\n    if (event.key == 'Enter') {\n      setResponses(responses => [...responses, message]);\n      handleMessageSubmit(message);\n      setCurrentMessage('');\n    }\n  };\n\n  const recordVoice = () => {\n    setTimeout(function () {\n      // stop recording\n      recorder.disconnect(context.destination);\n      mediaStream.disconnect(recorder); // we flat the left and right channels down\n      // Float32Array[] => Float32Array\n\n      var leftBuffer = flattenArray(leftchannel, recordingLength);\n      var rightBuffer = flattenArray(rightchannel, recordingLength); // we interleave both channels together\n      // [left[0],right[0],left[1],right[1],...]\n\n      var interleaved = interleave(leftBuffer, rightBuffer); // we create our wav file\n\n      var buffer = new ArrayBuffer(44 + interleaved.length * 2);\n      var view = new DataView(buffer); // RIFF chunk descriptor\n\n      writeUTFBytes(view, 0, 'RIFF');\n      view.setUint32(4, 44 + interleaved.length * 2, true);\n      writeUTFBytes(view, 8, 'WAVE'); // FMT sub-chunk\n\n      writeUTFBytes(view, 12, 'fmt ');\n      view.setUint32(16, 16, true); // chunkSize\n\n      view.setUint16(20, 1, true); // wFormatTag\n\n      view.setUint16(22, 2, true); // wChannels: stereo (2 channels)\n\n      view.setUint32(24, sampleRate, true); // dwSamplesPerSec\n\n      view.setUint32(28, sampleRate * 4, true); // dwAvgBytesPerSec\n\n      view.setUint16(32, 4, true); // wBlockAlign\n\n      view.setUint16(34, 16, true); // wBitsPerSample\n      // data sub-chunk\n\n      writeUTFBytes(view, 36, 'data');\n      view.setUint32(40, interleaved.length * 2, true); // write the PCM samples\n\n      var index = 44;\n      var volume = 1;\n\n      for (var i = 0; i < interleaved.length; i++) {\n        view.setInt16(index, interleaved[i] * (0x7fff * volume), true);\n        index += 2;\n      } // our final blob\n\n\n      blob = new Blob([view], {\n        type: 'audio/wav'\n      });\n      alert('finished recording');\n      var reader = new FileReader();\n      reader.readAsDataURL(blob);\n\n      reader.onloadend = function () {\n        var base64data = reader.result;\n        var base64String = base64data.split(',')[1];\n        axios.post('https://gowthambalachandhiran.pythonanywhere.com/voice', {\n          file_string: base64String\n        }).then(response => {\n          alert(response.data.transcribed_text); // const message = {\n          //   text: response.data.transcribed_text,\n          //   isBot: false,\n          // };\n\n          const message = new Object();\n          message.text = response.data.transcribed_text;\n          message.isBot = false; //replyChats(message);\n\n          if (attempt <= 2) {\n            //first message\n            if (speechData[0].isDone == false) {\n              if (response.data.transcribed_text.trim() == 'speech') {\n                setAttempt(0);\n                var speechValue = [...speechData];\n                speechValue[0].isDone = true;\n                setSpeechData(speechValue);\n                const data = [...responses];\n                data.push(message);\n                data.push(speechData[0]);\n                alert(speechData[0]);\n                setResponses(data);\n                var msg = new SpeechSynthesisUtterance();\n                msg.text = speechData[0].text;\n                window.speechSynthesis.speak(msg);\n\n                msg.onend = function (event) {\n                  recordVoice();\n                };\n              } else {\n                setAttempt(attempt + 1);\n                const data = [...responses];\n                data.push(new Object(message));\n                alert(\"attempt \" + attempt); // setResponses(data);\n\n                setResponses(responses.concat(message));\n                recordVoice();\n              }\n            } //Second message\n            else if (speechData[0].isDone == true && speechData[1].isDone == false) {\n              if (!isNaN(Number(response.data.transcribed_text.trim()))) {\n                alert(\"its a number\");\n                setAge(Number(response.data.transcribed_text.trim()));\n              }\n            }\n          } else {\n            const data = [...responses];\n            data.push({\n              text: 'Please contact this no x44545x for better assistance',\n              isBot: false\n            });\n            setResponses(data);\n          }\n        }).catch(error => {\n          console.log('Error: ', error);\n        });\n      };\n    }, 5000);\n    alert('recording in progress');\n    leftchannel = [];\n    rightchannel = [];\n    recorder = null;\n    recordingLength = 0;\n    volume = null;\n    mediaStream = null;\n    sampleRate = 48000;\n    context = null;\n    blob = null; //\n    // Initialize recorder\n\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n    navigator.getUserMedia({\n      audio: true\n    }, function (e) {\n      console.log('user consent'); // creates the audio context\n\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      context = new AudioContext(); // creates an audio node from the microphone incoming stream\n\n      mediaStream = context.createMediaStreamSource(e); // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor\n      // bufferSize: the onaudioprocess event is called when the buffer is full\n\n      var bufferSize = 2048;\n      var numberOfInputChannels = 2;\n      var numberOfOutputChannels = 2;\n\n      if (context.createScriptProcessor) {\n        recorder = context.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n      } else {\n        recorder = context.createJavaScriptNode(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n      }\n\n      var idx = 0;\n\n      recorder.onaudioprocess = function (e) {\n        idx++;\n        leftchannel.push(new Float32Array(e.inputBuffer.getChannelData(0)));\n        rightchannel.push(new Float32Array(e.inputBuffer.getChannelData(1)));\n        recordingLength += bufferSize;\n      }; // we connect the recorder\n\n\n      mediaStream.connect(recorder);\n      recorder.connect(context.destination);\n    }, function (e) {\n      console.error(e);\n    });\n  };\n\n  function flattenArray(channelBuffer, recordingLength) {\n    var result = new Float32Array(recordingLength);\n    var offset = 0;\n\n    for (var i = 0; i < channelBuffer.length; i++) {\n      var buffer = channelBuffer[i];\n      result.set(buffer, offset);\n      offset += buffer.length;\n    }\n\n    return result;\n  }\n\n  function interleave(leftChannel, rightChannel) {\n    var length = leftChannel.length + rightChannel.length;\n    var result = new Float32Array(length);\n    var inputIndex = 0;\n\n    for (var index = 0; index < length;) {\n      result[index++] = leftChannel[inputIndex];\n      result[index++] = rightChannel[inputIndex];\n      inputIndex++;\n    }\n\n    return result;\n  }\n\n  function writeUTFBytes(view, offset, string) {\n    for (var i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"botContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messagesContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Messages, {\n    messages: responses,\n    selectAge: selectAge,\n    selectGender: selectGender,\n    age: age,\n    sex: gender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"fa fa-microphone microphone-ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: currentMessage,\n    onChange: handleMessageChange,\n    disabled: true,\n    onKeyDown: handleSubmit,\n    placeholder: \"Say something...\",\n    className: \"messageInputField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onTap: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    style: {\n      marginRight: '10px'\n    },\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512.004 512.004\",\n    height: \"25\",\n    viewBox: \"0 0 512.004 512.004\",\n    width: \"25\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m511.35 52.881-122 400c-3.044 9.919-14.974 13.828-23.29 7.67-7.717-5.727-203.749-151.217-214.37-159.1l-142.1-54.96c-5.79-2.24-9.6-7.81-9.59-14.02.01-6.21 3.85-11.77 9.65-13.98l482-184c5.824-2.232 12.488-.626 16.67 4.17 3.37 3.87 4.55 9.24 3.03 14.22z\",\n    fill: \"#94dfda\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m511.35 52.881-122 400c-3.044 9.919-14.974 13.828-23.29 7.67l-190.05-141.05 332.31-280.84c3.37 3.87 4.55 9.24 3.03 14.22z\",\n    fill: \"#61a7c5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m507.89 58.821-271.49 286.4-63 125.03c-3.16 6.246-10.188 9.453-16.87 7.84-6.76-1.6-11.53-7.64-11.53-14.59v-175.3c0-4.86 2.35-9.41 6.31-12.23l337-239.69c6.29-4.48 14.95-3.45 20.01 2.38 5.07 5.83 4.88 14.56-.43 20.16z\",\n    fill: \"#eef4ff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m507.89 58.821-271.49 286.4-63 125.03c-3.16 6.246-10.188 9.453-16.87 7.84-6.76-1.6-11.53-7.64-11.53-14.59l31.01-144 332.31-280.84c5.07 5.83 4.88 14.56-.43 20.16z\",\n    fill: \"#d9e6fc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 17\n    }\n  })))))));\n};\n\n_s(Chat, \"AkiJZXa9A2nTSVVtevmLIYRVHx4=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/react-dialogflow-chatbot-wdsei6/src/Chat.js"],"names":["React","useState","useEffect","axios","useForceUpdate","Messages","Chat","props","responses","setResponses","text","isBot","id","isDone","speechBool","setSpeechBool","disable","setDisable","age","setAge","gender","setGender","botFlag","setBotFlag","forceUpdate","seconds","setSeconds","botData","setBotData","speechData","setSpeechData","confirm","speech","attempt","setAttempt","currentMessage","setCurrentMessage","leftchannel","rightchannel","recorder","recordingLength","volume","mediaStream","sampleRate","context","blob","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","onend","event","recordVoice","handleMessageSubmit","message","data","replyChats","selectAge","value","push","bot","selectGender","post","then","response","console","log","intent","name","alert","isNaN","Number","serviceResponse","trim","defaultResponse","catch","error","botvalue","botCopy","i","length","handleMessageChange","target","handleSubmit","key","setTimeout","disconnect","destination","leftBuffer","flattenArray","rightBuffer","interleaved","interleave","buffer","ArrayBuffer","view","DataView","writeUTFBytes","setUint32","setUint16","index","setInt16","Blob","type","reader","FileReader","readAsDataURL","onloadend","base64data","result","base64String","split","file_string","transcribed_text","Object","speechValue","concat","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","audio","e","AudioContext","webkitAudioContext","createMediaStreamSource","bufferSize","numberOfInputChannels","numberOfOutputChannels","createScriptProcessor","createJavaScriptNode","idx","onaudioprocess","Float32Array","inputBuffer","getChannelData","connect","channelBuffer","offset","set","leftChannel","rightChannel","inputIndex","string","setUint8","charCodeAt","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport useForceUpdate from 'use-force-update';\r\n\r\nimport './style.css';\r\nimport Messages from './Messages';\r\n\r\nconst Chat = (props) => {\r\n  const [responses, setResponses] = useState([\r\n    {\r\n      text: 'Hi This is Scooty!! the bot here to collect some basic information from you. Kindly select how you want our interaction to happen. You can either select Text by clicking \"Text\" button below or say \"Speech\" after holding Mic button',\r\n      isBot: true,\r\n      id: 1,\r\n      isDone: true,\r\n    },\r\n  ]);\r\n  const [speechBool, setSpeechBool] = useState(true);\r\n  const [disable, setDisable] = useState(false);\r\n  const [age, setAge] = useState(53);\r\n  const [gender, setGender] = useState('Male');\r\n  const [botFlag, setBotFlag] = useState(true);\r\n  const forceUpdate = useForceUpdate();\r\n  const [seconds, setSeconds] = useState(10);\r\n  const [botData, setBotData] = useState([\r\n    {\r\n      text: 'I would need to collect some information from you to start with can you please select your age',\r\n      isBot: true,\r\n      id: 2,\r\n      isDone: false,\r\n    },\r\n    {\r\n      text: 'Select Gender',\r\n      isBot: true,\r\n      id: 3,\r\n      isDone: false,\r\n    },\r\n    {\r\n      text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test ',\r\n      isBot: true,\r\n      id: 4,\r\n      isDone: false,\r\n    },\r\n  ]);\r\n\r\n  const [speechData, setSpeechData] = useState([\r\n    {\r\n      text: 'I would need to collect some information from you to start with can you please select your age',\r\n\r\n      id: 31,\r\n      isDone: false,\r\n      confirm: false,\r\n      speech: true,\r\n    },\r\n    {\r\n      text: 'Select Gender',\r\n\r\n      id: 32,\r\n      isDone: false,\r\n      confirm: false,\r\n      speech: true,\r\n    },\r\n    {\r\n      text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test ',\r\n\r\n      id: 33,\r\n      isDone: false,\r\n      confirm: false,\r\n      speech: true,\r\n    },\r\n  ]);\r\n  const [attempt, setAttempt] = useState(1);\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n\r\n  //voice recordings\r\n  var leftchannel;\r\n  var rightchannel;\r\n  var recorder;\r\n  var recordingLength;\r\n  var volume;\r\n  var mediaStream;\r\n  var sampleRate;\r\n  var context = null;\r\n  var blob = null;\r\n\r\n  //end of voice recordings\r\n  useEffect(() => {\r\n    if (speechBool) {\r\n      setSpeechBool(false);\r\n      var msg = new SpeechSynthesisUtterance();\r\n      msg.text =\r\n        'Hi This is Scooty!! the bot here to collect some basic information from you. Kindly select how you want our interaction to happen. You can either select Text by clicking \"Text\" button below or say \"Speech\" after holding Mic button';\r\n      window.speechSynthesis.speak(msg);\r\n\r\n      //To abort the interval you can use this:\r\n\r\n      // setInterval(() => setSeconds(seconds - 1), 1000);\r\n\r\n      //alert(seconds);\r\n      msg.onend = function (event) {\r\n        recordVoice();\r\n      };\r\n    }\r\n  });\r\n\r\n  const handleMessageSubmit = (message) => {\r\n    const data = {\r\n      text: 'good morning',\r\n    };\r\n    replyChats(message);\r\n  };\r\n  function selectAge(value, event) {\r\n    setAge(value);\r\n    // for (var i = 0; i < botData.length; i++) {\r\n    //   alert(botData[i].isDone);\r\n    // }\r\n    const data = [...responses];\r\n    data.push({\r\n      text: 'Select Gender',\r\n      isBot: true,\r\n      bot: true,\r\n    });\r\n    data.push({\r\n      text: 'Select Gender',\r\n      isBot: true,\r\n      id: 3,\r\n      isDone: true,\r\n    });\r\n    setResponses(data);\r\n  }\r\n\r\n  function selectGender(value, event) {\r\n    setGender(value);\r\n    const data = [...responses];\r\n\r\n    data.push({\r\n      text: 'Specify the tests you did for the past 3 months BP , ECG , lipid test',\r\n      isBot: true,\r\n      bot: true,\r\n    });\r\n    setResponses(data);\r\n  }\r\n  const replyChats = (message) => {\r\n    axios\r\n      .post('https://speech2textrasa.herokuapp.com/model/parse', {\r\n        text: message.text,\r\n      })\r\n      .then((response) => {\r\n        // alert(response.data);\r\n        // console.log(response.data);\r\n        // const responseData = {\r\n        //   text: response.data['message']['fulfillmentText'],\r\n        //   isBot: true,\r\n        // };\r\n        // setResponses((responses) => [...responses, responseData]);\r\n        console.log(response.data);\r\n        const intent = response.data.intent.name;\r\n\r\n        if (botData[0].isDone == true && botData[1].isDone == false) {\r\n          alert('select age');\r\n          if (isNaN(Number(message.text))) {\r\n            // defaultResponse(message);\r\n            setBotFlag(false);\r\n          } else {\r\n            alert(Number(message.text));\r\n            setAge(27);\r\n            serviceResponse(message);\r\n          }\r\n        } else if (botData[1].isDone == true && botData[2].isDone == false) {\r\n          alert('select gender');\r\n          if (message.text == 'male') {\r\n            alert('male');\r\n          } else if (message.text.trim() == 'female') {\r\n            alert('female');\r\n          }\r\n          setGender('Female');\r\n          forceUpdate();\r\n        } else if (\r\n          intent == 'greet' ||\r\n          intent == 'mood_great' ||\r\n          intent == 'bot_challenge' ||\r\n          intent == 'affirm'\r\n        ) {\r\n          serviceResponse(message);\r\n        } else {\r\n          defaultResponse(message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error: ', error);\r\n      });\r\n  };\r\n  const defaultResponse = (message) => {\r\n    const data = [...responses];\r\n    data.push(message);\r\n    data.push({\r\n      text: 'Please Be More Specific',\r\n      isBot: true,\r\n      bot: true,\r\n    });\r\n    setResponses(data);\r\n  };\r\n\r\n  const serviceResponse = (message) => {\r\n    axios\r\n      .post('https://speech2textrasa.herokuapp.com/webhooks/rest/webhook', {\r\n        message: message.text,\r\n      })\r\n      .then((response) => {\r\n        var botvalue = null;\r\n        setDisable(true);\r\n        console.log(response.data);\r\n        var botCopy = [...botData];\r\n        for (var i = 0; i < botCopy.length; i++) {\r\n          if (botCopy[i].isDone == false) {\r\n            botCopy[i].isDone = botFlag;\r\n            botvalue = botCopy[i];\r\n            break;\r\n          }\r\n        }\r\n        setBotData(botCopy);\r\n        console.log('Bot Value ' + botvalue);\r\n        const data = [...responses];\r\n        data.push(message);\r\n        data.push({\r\n          text: response.data[0].text,\r\n          isBot: true,\r\n          bot: true,\r\n        });\r\n        data.push(botvalue);\r\n        setResponses(data);\r\n      });\r\n  };\r\n  const handleMessageChange = (event) => {\r\n    setCurrentMessage(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    const message = {\r\n      text: currentMessage,\r\n      isBot: false,\r\n    };\r\n    if (event.key == 'Enter') {\r\n      setResponses((responses) => [...responses, message]);\r\n      handleMessageSubmit(message);\r\n      setCurrentMessage('');\r\n    }\r\n  };\r\n\r\n  const recordVoice = () => {\r\n    setTimeout(function () {\r\n      // stop recording\r\n\r\n      recorder.disconnect(context.destination);\r\n      mediaStream.disconnect(recorder);\r\n\r\n      // we flat the left and right channels down\r\n      // Float32Array[] => Float32Array\r\n      var leftBuffer = flattenArray(leftchannel, recordingLength);\r\n      var rightBuffer = flattenArray(rightchannel, recordingLength);\r\n      // we interleave both channels together\r\n      // [left[0],right[0],left[1],right[1],...]\r\n      var interleaved = interleave(leftBuffer, rightBuffer);\r\n\r\n      // we create our wav file\r\n      var buffer = new ArrayBuffer(44 + interleaved.length * 2);\r\n      var view = new DataView(buffer);\r\n\r\n      // RIFF chunk descriptor\r\n      writeUTFBytes(view, 0, 'RIFF');\r\n      view.setUint32(4, 44 + interleaved.length * 2, true);\r\n      writeUTFBytes(view, 8, 'WAVE');\r\n      // FMT sub-chunk\r\n      writeUTFBytes(view, 12, 'fmt ');\r\n      view.setUint32(16, 16, true); // chunkSize\r\n      view.setUint16(20, 1, true); // wFormatTag\r\n      view.setUint16(22, 2, true); // wChannels: stereo (2 channels)\r\n      view.setUint32(24, sampleRate, true); // dwSamplesPerSec\r\n      view.setUint32(28, sampleRate * 4, true); // dwAvgBytesPerSec\r\n      view.setUint16(32, 4, true); // wBlockAlign\r\n      view.setUint16(34, 16, true); // wBitsPerSample\r\n      // data sub-chunk\r\n      writeUTFBytes(view, 36, 'data');\r\n      view.setUint32(40, interleaved.length * 2, true);\r\n\r\n      // write the PCM samples\r\n      var index = 44;\r\n      var volume = 1;\r\n      for (var i = 0; i < interleaved.length; i++) {\r\n        view.setInt16(index, interleaved[i] * (0x7fff * volume), true);\r\n        index += 2;\r\n      }\r\n\r\n      // our final blob\r\n      blob = new Blob([view], { type: 'audio/wav' });\r\n\r\n      alert('finished recording');\r\n\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(blob);\r\n      reader.onloadend = function () {\r\n        var base64data = reader.result;\r\n        var base64String = base64data.split(',')[1];\r\n\r\n        axios\r\n          .post('https://gowthambalachandhiran.pythonanywhere.com/voice', {\r\n            file_string: base64String,\r\n          })\r\n          .then((response) => {\r\n            alert(response.data.transcribed_text);\r\n            // const message = {\r\n            //   text: response.data.transcribed_text,\r\n            //   isBot: false,\r\n            // };\r\n            const message =  new Object();\r\n            message.text = response.data.transcribed_text;\r\n            message.isBot = false;\r\n            //replyChats(message);\r\n            if (attempt <= 2) {\r\n              //first message\r\n              if (speechData[0].isDone == false) {\r\n                if (response.data.transcribed_text.trim() == 'speech') {\r\n                  setAttempt(0);\r\n                  var speechValue = [...speechData];\r\n                  speechValue[0].isDone = true;\r\n                  setSpeechData(speechValue);\r\n                  const data = [...responses];\r\n                  data.push(message);\r\n                  data.push(speechData[0]);\r\n                  alert(speechData[0]);\r\n                  setResponses(data);\r\n                  var msg = new SpeechSynthesisUtterance();\r\n                  msg.text = speechData[0].text;\r\n\r\n                  window.speechSynthesis.speak(msg);\r\n                  msg.onend = function (event) {\r\n                    recordVoice();\r\n                  };\r\n                } else {\r\n                  \r\n                  setAttempt(attempt + 1);\r\n                  const data = [...responses];\r\n                  data.push(new Object(message));\r\n                  alert(\"attempt \"+attempt);\r\n                 // setResponses(data);\r\n                  setResponses(responses.concat(message));\r\n\r\n\r\n                  recordVoice();\r\n                }\r\n              }\r\n              //Second message\r\n              else if (speechData[0].isDone == true && speechData[1].isDone == false){\r\n\r\n                if(!isNaN(Number(response.data.transcribed_text.trim()))){\r\n                  alert(\"its a number\");\r\n                  setAge(Number(response.data.transcribed_text.trim()));\r\n                 \r\n\r\n                }\r\n\r\n              }\r\n\r\n            } else {\r\n              const data = [...responses];\r\n              data.push({\r\n                text: 'Please contact this no x44545x for better assistance',\r\n\r\n                isBot: false,\r\n              });\r\n              setResponses(data);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log('Error: ', error);\r\n          });\r\n      };\r\n    }, 5000);\r\n    alert('recording in progress');\r\n    leftchannel = [];\r\n    rightchannel = [];\r\n    recorder = null;\r\n    recordingLength = 0;\r\n    volume = null;\r\n    mediaStream = null;\r\n    sampleRate = 48000;\r\n    context = null;\r\n    blob = null;\r\n\r\n    //\r\n\r\n    // Initialize recorder\r\n    navigator.getUserMedia =\r\n      navigator.getUserMedia ||\r\n      navigator.webkitGetUserMedia ||\r\n      navigator.mozGetUserMedia ||\r\n      navigator.msGetUserMedia;\r\n    navigator.getUserMedia(\r\n      {\r\n        audio: true,\r\n      },\r\n      function (e) {\r\n        console.log('user consent');\r\n\r\n        // creates the audio context\r\n        window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n        context = new AudioContext();\r\n\r\n        // creates an audio node from the microphone incoming stream\r\n        mediaStream = context.createMediaStreamSource(e);\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor\r\n        // bufferSize: the onaudioprocess event is called when the buffer is full\r\n        var bufferSize = 2048;\r\n        var numberOfInputChannels = 2;\r\n        var numberOfOutputChannels = 2;\r\n        if (context.createScriptProcessor) {\r\n          recorder = context.createScriptProcessor(\r\n            bufferSize,\r\n            numberOfInputChannels,\r\n            numberOfOutputChannels\r\n          );\r\n        } else {\r\n          recorder = context.createJavaScriptNode(\r\n            bufferSize,\r\n            numberOfInputChannels,\r\n            numberOfOutputChannels\r\n          );\r\n        }\r\n        var idx = 0;\r\n        recorder.onaudioprocess = function (e) {\r\n          idx++;\r\n\r\n          leftchannel.push(new Float32Array(e.inputBuffer.getChannelData(0)));\r\n          rightchannel.push(new Float32Array(e.inputBuffer.getChannelData(1)));\r\n          recordingLength += bufferSize;\r\n        };\r\n\r\n        // we connect the recorder\r\n\r\n        mediaStream.connect(recorder);\r\n        recorder.connect(context.destination);\r\n      },\r\n      function (e) {\r\n        console.error(e);\r\n      }\r\n    );\r\n  };\r\n\r\n  function flattenArray(channelBuffer, recordingLength) {\r\n    var result = new Float32Array(recordingLength);\r\n    var offset = 0;\r\n    for (var i = 0; i < channelBuffer.length; i++) {\r\n      var buffer = channelBuffer[i];\r\n      result.set(buffer, offset);\r\n      offset += buffer.length;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function interleave(leftChannel, rightChannel) {\r\n    var length = leftChannel.length + rightChannel.length;\r\n    var result = new Float32Array(length);\r\n\r\n    var inputIndex = 0;\r\n\r\n    for (var index = 0; index < length; ) {\r\n      result[index++] = leftChannel[inputIndex];\r\n      result[index++] = rightChannel[inputIndex];\r\n      inputIndex++;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function writeUTFBytes(view, offset, string) {\r\n    for (var i = 0; i < string.length; i++) {\r\n      view.setUint8(offset + i, string.charCodeAt(i));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"chatSection\">\r\n      <div className=\"botContainer\">\r\n        <div className=\"messagesContainer\">\r\n          <div className=\"messageCard\">\r\n            <Messages\r\n              messages={responses}\r\n              selectAge={selectAge}\r\n              selectGender={selectGender}\r\n              age={age}\r\n              sex={gender}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/*The input section is 👇*/}\r\n        <div className=\"inputSection\">\r\n          <button class=\"fa fa-microphone microphone-ico\"> </button>\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={currentMessage}\r\n            onChange={handleMessageChange}\r\n            disabled={true}\r\n            onKeyDown={handleSubmit}\r\n            placeholder=\"Say something...\"\r\n            className=\"messageInputField\"\r\n          />\r\n\r\n          <div onTap={handleSubmit}>\r\n            <svg\r\n              style={{ marginRight: '10px' }}\r\n              id=\"Capa_1\"\r\n              enableBackground=\"new 0 0 512.004 512.004\"\r\n              height=\"25\"\r\n              viewBox=\"0 0 512.004 512.004\"\r\n              width=\"25\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <g>\r\n                <path\r\n                  d=\"m511.35 52.881-122 400c-3.044 9.919-14.974 13.828-23.29 7.67-7.717-5.727-203.749-151.217-214.37-159.1l-142.1-54.96c-5.79-2.24-9.6-7.81-9.59-14.02.01-6.21 3.85-11.77 9.65-13.98l482-184c5.824-2.232 12.488-.626 16.67 4.17 3.37 3.87 4.55 9.24 3.03 14.22z\"\r\n                  fill=\"#94dfda\"\r\n                />\r\n                <path\r\n                  d=\"m511.35 52.881-122 400c-3.044 9.919-14.974 13.828-23.29 7.67l-190.05-141.05 332.31-280.84c3.37 3.87 4.55 9.24 3.03 14.22z\"\r\n                  fill=\"#61a7c5\"\r\n                />\r\n                <path\r\n                  d=\"m507.89 58.821-271.49 286.4-63 125.03c-3.16 6.246-10.188 9.453-16.87 7.84-6.76-1.6-11.53-7.64-11.53-14.59v-175.3c0-4.86 2.35-9.41 6.31-12.23l337-239.69c6.29-4.48 14.95-3.45 20.01 2.38 5.07 5.83 4.88 14.56-.43 20.16z\"\r\n                  fill=\"#eef4ff\"\r\n                />\r\n                <path\r\n                  d=\"m507.89 58.821-271.49 286.4-63 125.03c-3.16 6.246-10.188 9.453-16.87 7.84-6.76-1.6-11.53-7.64-11.53-14.59l31.01-144 332.31-280.84c5.07 5.83 4.88 14.56-.43 20.16z\"\r\n                  fill=\"#d9e6fc\"\r\n                />\r\n              </g>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}